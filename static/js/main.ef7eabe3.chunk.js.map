{"version":3,"sources":["components/Card/Card.style.js","components/Card/index.js","components/CardList/CardList.style.js","components/CardList/index.js","components/SearchBox/SearchBox.style.js","components/SearchBox/index.js","Movies.js","MovieDetail.js","components/Navbar/index.js","App.js","reportWebVitals.js","index.js"],"names":["StyledCardWrapper","styled","div","StyledText","h1","StyledMovieImage","p","img","Card","props","history","useHistory","onClick","push","id","src","imgSrc","alt","title","StyledCardList","CardList","useContext","MovieContext","movieData","baseImageUrl","map","movie","index","desc","overview","poster_path","StyledButton","button","StyledSearchButton","StyledSearchInput","input","isLive","css","color","StyledSearchBox","SearchBox","setSearchText","inputRef","useRef","placeholder","ref","current","value","createContext","Movies","useState","setMovieData","searchText","useEffect","axios","get","params","api_key","page","query","then","response","data","results","console","log","catch","err","finally","className","Provider","MovieDetail","movData","setMovData","useParams","res","style","padding","display","alignItems","justifyContent","flexWrap","width","original_title","Navbar","to","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef7eabe3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledCardWrapper = styled.div`\r\n    margin: 10px;\r\n    padding: 0px;\r\n    width: 150px;\r\n    height: 250px;\r\n    border: none;\r\n    border-radius: 10px;\r\n    box-shadow: 3px 3px rgba(0,0,0,0.2);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    transition: 0.1s;\r\n    overflow: hidden;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n        box-shadow: 0.3rem 0.3rem 0.9rem rgba(0,0,0,0.2);\r\n    }\r\n`;\r\n\r\nexport const StyledText = styled.h1`\r\n    color: gray;\r\n    font-size: 0.8rem;\r\n`;\r\n\r\nexport const StyledDescription = styled.p`\r\n    color: black;\r\n    font-size: 0.5rem;\r\n`;\r\n\r\nexport const StyledMovieImage = styled.img`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    object-fit: cover;\r\n    width: 100%;\r\n    height: 85%;\r\n`;","// import styles from \"./Card.module.css\";   module olarak cagirinca\r\nimport \"./Card.style.css\"; // normal caigirinca\r\n// import \"./Card.style.scss\";\r\nimport { StyledCardWrapper, StyledMovieImage, StyledText } from \"./Card.style\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n// const cardStyle = {\r\n//     color: \"blue\",\r\n//     backgroundColor: \"yellow\"\r\n// }\r\n\r\nexport const Card = (props) => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            {/* <div className={styles.cardWrapper}>\r\n                <p>CARD</p>\r\n            </div> */}\r\n            {/* \r\n            <div className=\"card-wrapper\">\r\n                <p>CARD</p>\r\n            </div> */}\r\n\r\n            <StyledCardWrapper onClick={()=>history.push(\"/detail/\" + props.id)}>\r\n                <StyledMovieImage src={props.imgSrc} alt={\"Movie Poster\"}/>\r\n                <StyledText>{props.title}</StyledText>\r\n            </StyledCardWrapper>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledCardList = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-items: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;","import { useContext} from \"react\";\r\nimport { Card } from \"../Card\";\r\nimport { StyledCardList } from './CardList.style'\r\nimport {MovieContext} from \"../../Movies\";\r\n\r\n\r\nexport const CardList = () => {\r\n    const { movieData, baseImageUrl } = useContext(MovieContext);\r\n\r\n    return (\r\n        <StyledCardList>\r\n            { movieData && movieData.map(\r\n                (movie, index) => (\r\n                    <Card\r\n                        key={index}\r\n                        title={movie.title}\r\n                        desc={movie.overview}\r\n                        id={movie.id}\r\n                        imgSrc={movie.poster_path ? baseImageUrl+movie.poster_path : \"https://cdn.pixabay.com/photo/2016/12/14/23/08/page-not-found-1907792__340.jpg\"}\r\n                    />)\r\n            )}\r\n        </StyledCardList>\r\n    )\r\n}","import styled, {css} from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n    border-radius: 0.2rem;\r\n    padding: 0.2rem;\r\n`;\r\n\r\nexport const StyledSearchButton = styled(StyledButton)`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const StyledSearchInput = styled.input`\r\n\r\n    ${ p => p.isLive && css`\r\n        background-color: #ddd;\r\n    ` }\r\n\r\n    color: ${p => p.color};\r\n    border-radius: 0.3rem;\r\n    margin-right: 0.5rem;\r\n    padding: 0.2rem;\r\n\r\n`;\r\n\r\nexport const StyledSearchBox = styled.div`\r\n    margin: 2rem;\r\n\r\n    /* input {\r\n        color: blue;\r\n        border-radius: 0.3rem;\r\n        margin-right: 0.5rem;\r\n    } */ // bu sekilde de yazilabiliyor\r\n\r\n    ${StyledSearchInput} {\r\n        color: rgb(5,5,5)\r\n    }\r\n\r\n\r\n\r\n`;\r\n\r\n\r\n// template string literals  ` ${} `","import { useRef, useContext} from \"react\";\r\nimport { StyledSearchBox, StyledSearchInput, StyledSearchButton } from \"./SearchBox.style\";\r\nimport {MovieContext} from \"../../Movies\";\r\n\r\nexport const SearchBox = () => {\r\n\r\n    // const [inputValue, setInputValue] = useState(\"\");\r\n    // bunun yerine useRef ile daha kolay yapabilirz\r\n    const {setSearchText} = useContext(MovieContext);\r\n    const inputRef = useRef();\r\n\r\n    return (\r\n        <StyledSearchBox>\r\n            {/* <StyledSearchInput color=\"red\" isLive onChange={(e)=>setInputValue(e.target.value)}/> */}\r\n            <StyledSearchInput placeholder=\"Search..\" ref={inputRef} color=\"red\" isLive />\r\n            <StyledSearchButton onClick={() => {setSearchText(inputRef?.current?.value)}}> Search</StyledSearchButton>\r\n        </StyledSearchBox>\r\n    )\r\n}","import React, { useEffect, useState, createContext } from 'react';\r\nimport './App.css';\r\nimport { CardList } from \"./components/CardList\";\r\nimport { SearchBox } from './components/SearchBox';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst apiKey = \"7fc8d00ab1302c6aa7da237d2810116e\";  //temporary\r\nconst baseURL = \"https://api.themoviedb.org/3/search/movie\";\r\nconst baseImageUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\nexport const MovieContext = createContext();\r\n\r\nfunction Movies() {\r\n\r\n  const [movieData, setMovieData] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"war\");\r\n\r\n  useEffect(() => {\r\n    axios.get(baseURL, {\r\n      params: {\r\n        api_key: apiKey,\r\n        page: 1,\r\n        query: searchText  // TODO: input from user\r\n      }\r\n    })\r\n      .then((response) => {\r\n        setMovieData(response?.data?.results); // ? this makes it optional\r\n        console.log(response);\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally();\r\n\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MovieContext.Provider value={{movieData, baseImageUrl, setSearchText}}>\r\n        <SearchBox />\r\n        <CardList />\r\n      </MovieContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { StyledMovieImage } from \"./components/Card/Card.style\";\r\n\r\nconst movieBaseUrl = \"https://api.themoviedb.org/3/movie/\"\r\nconst apiKey = \"7fc8d00ab1302c6aa7da237d2810116e\";  //temporary\r\nconst baseImageUrl = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\nexport default function MovieDetail() {\r\n\r\n    const [movData, setMovData] = useState({});\r\n\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        axios.get(movieBaseUrl + id, {\r\n            params: {\r\n                api_key: apiKey\r\n            }\r\n        })\r\n            .then(res => setMovData(res?.data))\r\n            .catch()\r\n            .finally(console.log(movData));\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ padding:\"50px\", display: \"flex\", alignItems:\"center\", justifyContent:\"center\", flexWrap:\"wrap\" }}>\r\n            <img style={{ padding: \"30px\", width:\"300px\" }} src={baseImageUrl + movData?.poster_path} alt={\"Movie Poster\"} />\r\n            <div style={{width: \"300px\"}}>\r\n                <h1>{movData.original_title}</h1>\r\n                <p>{movData.overview}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">Home</Link>\r\n        </div>\r\n    )\r\n}","import Movies from \"./Movies\"\r\nimport MovieDetail from \"./MovieDetail\"\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\r\nimport Navbar from \"./components/Navbar\"\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar/>\r\n            <Switch>\r\n                <Route path=\"/detail/:id\" component={MovieDetail} exact/>\r\n                <Route path=\"/\" component={Movies} /> \r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}